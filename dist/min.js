var bicubic=function(t){var e={};function r(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)r.d(n,a,function(e){return t[e]}.bind(null,a));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e){function r(t,e={}){e=Object.assign({extrapolate:!1,scaleX:1,scaleY:1,translateX:0,translateY:0},e);const r=t[1][1],n=-.5*t[1][0]+.5*t[1][2],a=t[1][0]+-2.5*t[1][1]+2*t[1][2]+-.5*t[1][3],o=-.5*t[1][0]+1.5*t[1][1]+-1.5*t[1][2]+.5*t[1][3],l=-.5*t[0][1]+.5*t[2][1],c=.25*t[0][0]+-.25*t[0][2]+-.25*t[2][0]+.25*t[2][2],u=-.5*t[0][0]+5/4*t[0][1]+-1*t[0][2]+.25*t[0][3]+.5*t[2][0]+-5/4*t[2][1]+t[2][2]+-.25*t[2][3],i=.25*t[0][0]+-.75*t[0][1]+.75*t[0][2]+-.25*t[0][3]+-.25*t[2][0]+.75*t[2][1]+-.75*t[2][2]+.25*t[2][3],s=t[0][1]+-2.5*t[1][1]+2*t[2][1]+-.5*t[3][1],f=-.5*t[0][0]+.5*t[0][2]+5/4*t[1][0]+-5/4*t[1][2]+-1*t[2][0]+t[2][2]+.25*t[3][0]+-.25*t[3][2],p=t[0][0]+-2.5*t[0][1]+2*t[0][2]+-.5*t[0][3]+-2.5*t[1][0]+6.25*t[1][1]+-5*t[1][2]+5/4*t[1][3]+2*t[2][0]+-5*t[2][1]+4*t[2][2]+-1*t[2][3]+-.5*t[3][0]+5/4*t[3][1]+-1*t[3][2]+.25*t[3][3],d=-.5*t[0][0]+1.5*t[0][1]+-1.5*t[0][2]+.5*t[0][3]+5/4*t[1][0]+-3.75*t[1][1]+3.75*t[1][2]+-5/4*t[1][3]+-1*t[2][0]+3*t[2][1]+-3*t[2][2]+t[2][3]+.25*t[3][0]+-.75*t[3][1]+.75*t[3][2]+-.25*t[3][3],b=-.5*t[0][1]+1.5*t[1][1]+-1.5*t[2][1]+.5*t[3][1],g=.25*t[0][0]+-.25*t[0][2]+-.75*t[1][0]+.75*t[1][2]+.75*t[2][0]+-.75*t[2][2]+-.25*t[3][0]+.25*t[3][2],m=-.5*t[0][0]+5/4*t[0][1]+-1*t[0][2]+.25*t[0][3]+1.5*t[1][0]+-3.75*t[1][1]+3*t[1][2]+-.75*t[1][3]+-1.5*t[2][0]+3.75*t[2][1]+-3*t[2][2]+.75*t[2][3]+.5*t[3][0]+-5/4*t[3][1]+t[3][2]+-.25*t[3][3],h=.25*t[0][0]+-.75*t[0][1]+.75*t[0][2]+-.25*t[0][3]+-.75*t[1][0]+9/4*t[1][1]+-9/4*t[1][2]+.75*t[1][3]+.75*t[2][0]+-9/4*t[2][1]+9/4*t[2][2]+-.75*t[2][3]+-.25*t[3][0]+.75*t[3][1]+-.75*t[3][2]+.25*t[3][3];return(t,v)=>{if(t=t*e.scaleX+e.translateX,v=v*e.scaleY+e.translateY,t<0||v<0||t>1||v>1)throw"cannot interpolate outside the square from (0, 0) to (1, 1): ("+t+", "+v+")";const x=t*t,y=v*v,j=v*y;return r+n*v+a*y+o*j+(l+c*v+u*y+i*j)*t+(s+f*v+p*y+d*j)*x+(b+g*v+m*y+h*j)*(t*x)}}function n(t,e={}){e=Object.assign({extrapolate:!1,scaleX:1,scaleY:1,translateX:0,translateY:0},e);const n=t.length,a=t[0].length,o=[];if(e.extrapolate){t[-2]=[],t[-1]=[],t[n]=[],t[n+1]=[];for(var l=0;l<a;l++){const e=t[0][l]-t[1][l],r=t[n-1][l]-t[n-2][l];t[-2][l]=t[0][l]+2*e,t[-1][l]=t[0][l]+e,t[n][l]=t[n-1][l]+r,t[n+1][l]=t[n-1][l]+2*r}for(var c=-2;c<n+2;c++){const e=t[c][0]-t[c][1],r=t[c][a-1]-t[c][a-2];t[c][-2]=t[c][0]+2*e,t[c][-1]=t[c][0]+e,t[c][a]=t[c][a-1]+r,t[c][a+1]=t[c][a-1]+2*r}for(c=-1;c<n;c++)o[c]=[]}else for(c=1;c<n-2;c++)o[c]=[];return(l,c)=>{if(l=l*e.scaleX+e.translateX,c=c*e.scaleY+e.translateY,e.extrapolate){if(l<-1||c<-1||l>n||c>a)throw"cannot interpolate outside the rectangle from (-1, -1) to ("+n+", "+a+") even when extrapolating: ("+l+", "+c+")"}else if(l<1||c<1||l>n-2||c>a-2)throw"cannot interpolate outside the rectangle from (1, 1) to ("+(n-2)+", "+(a-2)+"): ("+l+", "+c+"), you might want to enable extrapolating";var u=Math.floor(l),i=Math.floor(c);return e.extrapolate?(l===n&&u--,c===a&&i--):(l===n-2&&u--,c===a-2&&i--),o[u][i]||(o[u][i]=r([[t[u-1][i-1],t[u-1][i],t[u-1][i+1],t[u-1][i+2]],[t[u+0][i-1],t[u+0][i],t[u][i+1],t[u][i+2]],[t[u+1][i-1],t[u+1][i],t[u+1][i+1],t[u+1][i+2]],[t[u+2][i-1],t[u+2][i],t[u+2][i+1],t[u+2][i+2]]],{translateX:-u,translateY:-i})),(0,o[u][i])(l,c)}}t.exports={createInterpolator:r,createGridInterpolator:n,createMultiInterpolator:function(t,e={}){const n=t[0][0].length,a=[];for(var o=0;o<n;o++)a[o]=r(t.map(t=>t.map(t=>t[o])),e);return(t,e)=>a.map(r=>r(t,e))},createMultiGridInterpolator:function(t,e={}){const r=t[0][0].length,a=[];for(var o=0;o<r;o++)a[o]=n(t.map(t=>t.map(t=>t[o])),e);return(t,e)=>a.map(r=>r(t,e))}}}]);